<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.young.mapper.CourseMapper">
  <resultMap id="BaseResultMap" type="cn.young.manager.pojo.Course">
    <id column="cid" jdbcType="BIGINT" property="cid" />
    <result column="sch_name" jdbcType="VARCHAR" property="schName" />
    <result column="course_code" jdbcType="VARCHAR" property="courseCode" />
    <result column="course_name" jdbcType="VARCHAR" property="courseName" />
    <result column="course_info" jdbcType="VARCHAR" property="courseInfo" />
    <result column="course_selectnum" jdbcType="INTEGER" property="courseSelectnum" />
    <result column="course_totalnum" jdbcType="INTEGER" property="courseTotalnum" />
    <result column="course_remark" jdbcType="VARCHAR" property="courseRemark" />
    <result column="course_des" jdbcType="VARCHAR" property="courseDes" />
    <result column="course_image" jdbcType="VARCHAR" property="courseImage" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    cid, sch_name, course_code, course_name, course_info, course_selectnum, course_totalnum, 
    course_remark, course_des, course_image
  </sql>
  <select id="selectByExample" parameterType="cn.young.manager.pojo.CourseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause} desc
    </if>
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from course
    where cid = #{cid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from course
    where cid = #{cid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.young.manager.pojo.CourseExample">
    delete from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.young.manager.pojo.Course">
    insert into course (cid, sch_name, course_code, 
      course_name, course_info, course_selectnum, 
      course_totalnum, course_remark, course_des, 
      course_image)
    values (#{cid,jdbcType=BIGINT}, #{schName,jdbcType=VARCHAR}, #{courseCode,jdbcType=VARCHAR}, 
      #{courseName,jdbcType=VARCHAR}, #{courseInfo,jdbcType=VARCHAR}, #{courseSelectnum,jdbcType=INTEGER}, 
      #{courseTotalnum,jdbcType=INTEGER}, #{courseRemark,jdbcType=VARCHAR}, #{courseDes,jdbcType=VARCHAR}, 
      #{courseImage,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.young.manager.pojo.Course">
    insert into course
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="cid != null">
        cid,
      </if>
      <if test="schName != null">
        sch_name,
      </if>
      <if test="courseCode != null">
        course_code,
      </if>
      <if test="courseName != null">
        course_name,
      </if>
      <if test="courseInfo != null">
        course_info,
      </if>
      <if test="courseSelectnum != null">
        course_selectnum,
      </if>
      <if test="courseTotalnum != null">
        course_totalnum,
      </if>
      <if test="courseRemark != null">
        course_remark,
      </if>
      <if test="courseDes != null">
        course_des,
      </if>
      <if test="courseImage != null">
        course_image,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="cid != null">
        #{cid,jdbcType=BIGINT},
      </if>
      <if test="schName != null">
        #{schName,jdbcType=VARCHAR},
      </if>
      <if test="courseCode != null">
        #{courseCode,jdbcType=VARCHAR},
      </if>
      <if test="courseName != null">
        #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="courseInfo != null">
        #{courseInfo,jdbcType=VARCHAR},
      </if>
      <if test="courseSelectnum != null">
        #{courseSelectnum,jdbcType=INTEGER},
      </if>
      <if test="courseTotalnum != null">
        #{courseTotalnum,jdbcType=INTEGER},
      </if>
      <if test="courseRemark != null">
        #{courseRemark,jdbcType=VARCHAR},
      </if>
      <if test="courseDes != null">
        #{courseDes,jdbcType=VARCHAR},
      </if>
      <if test="courseImage != null">
        #{courseImage,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.young.manager.pojo.CourseExample" resultType="java.lang.Long">
    select count(*) from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update course
    <set>
      <if test="record.cid != null">
        cid = #{record.cid,jdbcType=BIGINT},
      </if>
      <if test="record.schName != null">
        sch_name = #{record.schName,jdbcType=VARCHAR},
      </if>
      <if test="record.courseCode != null">
        course_code = #{record.courseCode,jdbcType=VARCHAR},
      </if>
      <if test="record.courseName != null">
        course_name = #{record.courseName,jdbcType=VARCHAR},
      </if>
      <if test="record.courseInfo != null">
        course_info = #{record.courseInfo,jdbcType=VARCHAR},
      </if>
      <if test="record.courseSelectnum != null">
        course_selectnum = #{record.courseSelectnum,jdbcType=INTEGER},
      </if>
      <if test="record.courseTotalnum != null">
        course_totalnum = #{record.courseTotalnum,jdbcType=INTEGER},
      </if>
      <if test="record.courseRemark != null">
        course_remark = #{record.courseRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.courseDes != null">
        course_des = #{record.courseDes,jdbcType=VARCHAR},
      </if>
      <if test="record.courseImage != null">
        course_image = #{record.courseImage,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update course
    set cid = #{record.cid,jdbcType=BIGINT},
      sch_name = #{record.schName,jdbcType=VARCHAR},
      course_code = #{record.courseCode,jdbcType=VARCHAR},
      course_name = #{record.courseName,jdbcType=VARCHAR},
      course_info = #{record.courseInfo,jdbcType=VARCHAR},
      course_selectnum = #{record.courseSelectnum,jdbcType=INTEGER},
      course_totalnum = #{record.courseTotalnum,jdbcType=INTEGER},
      course_remark = #{record.courseRemark,jdbcType=VARCHAR},
      course_des = #{record.courseDes,jdbcType=VARCHAR},
      course_image = #{record.courseImage,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.young.manager.pojo.Course">
    update course
    <set>
      <if test="schName != null">
        sch_name = #{schName,jdbcType=VARCHAR},
      </if>
      <if test="courseCode != null">
        course_code = #{courseCode,jdbcType=VARCHAR},
      </if>
      <if test="courseName != null">
        course_name = #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="courseInfo != null">
        course_info = #{courseInfo,jdbcType=VARCHAR},
      </if>
      <if test="courseSelectnum != null">
        course_selectnum = #{courseSelectnum,jdbcType=INTEGER},
      </if>
      <if test="courseTotalnum != null">
        course_totalnum = #{courseTotalnum,jdbcType=INTEGER},
      </if>
      <if test="courseRemark != null">
        course_remark = #{courseRemark,jdbcType=VARCHAR},
      </if>
      <if test="courseDes != null">
        course_des = #{courseDes,jdbcType=VARCHAR},
      </if>
      <if test="courseImage != null">
        course_image = #{courseImage,jdbcType=VARCHAR},
      </if>
    </set>
    where cid = #{cid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.young.manager.pojo.Course">
    update course
    set sch_name = #{schName,jdbcType=VARCHAR},
      course_code = #{courseCode,jdbcType=VARCHAR},
      course_name = #{courseName,jdbcType=VARCHAR},
      course_info = #{courseInfo,jdbcType=VARCHAR},
      course_selectnum = #{courseSelectnum,jdbcType=INTEGER},
      course_totalnum = #{courseTotalnum,jdbcType=INTEGER},
      course_remark = #{courseRemark,jdbcType=VARCHAR},
      course_des = #{courseDes,jdbcType=VARCHAR},
      course_image = #{courseImage,jdbcType=VARCHAR}
    where cid = #{cid,jdbcType=BIGINT}
  </update>
  <select id="findCourseByLike" parameterType="string" resultMap="BaseResultMap">
		SELECT
		    *
		FROM
			course
		WHERE
			course_name LIKE CONCAT(CONCAT('%',#{keywords},'%'))
	</select>

  <select id="selectAllCourseBySchoolName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
      *
    from
      course
    where
      sch_name = #{schName}
  </select>

  <!--下面是章海翔的配置-->

  <!--选课人数加一-->
  <update id="addSelectNum">
    update course
    set course_selectnum = course_selectnum + 1
    where cid = #{cid}
  </update>

  <!--选课人数减一-->
  <update id="subSelectNum">
    update course
    set course_selectnum = course_selectnum - 1
    where cid = #{cid}
  </update>

  <!-- 查找学校的课程信息 -->
  <select id="findCourseBySid" parameterType="cn.young.manager.pojo.Page" resultMap="BaseResultMap">
		select * from course where sch_name = #{schName} limit #{page},#{limit}
  </select>

  <!-- 获得课程信息 -->
  <select id="getCourseByCid" resultMap="BaseResultMap">
        select *
        from course
        where cid = #{cid}
    </select>

  <!-- 推荐课程查询 -->
  <select id="getRecommendCourse" resultMap="BaseResultMap">
        SELECT *
        FROM course
        WHERE cid IN(
            SELECT MAX(course.cid)
            FROM(
                    SELECT *
                    FROM evaluation
                    ORDER BY average_mark * total DESC LIMIT 8
                ) AS t1, course
            WHERE t1.course_code = course.course_code
            GROUP BY t1.course_code
        );
    </select>

  <!--<select id="findAllHotCourse" resultMap="BaseResultMap">-->
  <!--SELECT  *-->
  <!--FROM course-->
  <!--ORDER BY course_selectnum-->
  <!--DESC limit 8-->
  <!--</select>-->
  <select id="findAllHotCourse" resultMap="BaseResultMap">
 SELECT * FROM course WHERE cid IN (
	SELECT t.cid FROM(
		SELECT course.`cid` FROM (
			SELECT course_code,MAX(cid) AS maxcid
			FROM course
			GROUP BY course_code) AS t1, course
		WHERE t1.maxcid=course.cid
		GROUP BY cid
		ORDER BY course.`course_selectnum` DESC LIMIT 8)AS t);
  </select>


  <select id="selectCourseName" resultMap="BaseResultMap" parameterType="cn.young.manager.pojo.Course">
        select
        <include refid="Base_Column_List" />
        from
        course
        WHERE
        course_code=#{courseCode} limit 1
    </select>

</mapper>